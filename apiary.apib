FORMAT: 1A
HOST: https://api-events.datasnap.io/v1.0/



# Datasnap.io Events API
The datasnap.io Events API allows you to send any kind of event to the datasnap.io platform for reporting and measurement. 
There are a set of out of the box events that will automatically show up on your dashboards. You may also send non-standard events which we can analyize separately.


Please see http://datasnap-io.github.io/index.html for detailed use cases and design guide for the
best way to send us data.  


Terms and Conditions: http://www.datasnap.io/terms.html#apiterms 

# Authentication and API Keys

You will get a API Key and API Secret for access and add it to the headers as "Authorization:  Basic <PUT Base64 String Here>"

In order to authorize then base64 encode the key and secret together. For example
you can use this Linux command to do create this base64 string:


                echo -n "APIKey:APISecret" | openssl base64

####Examples

**Java Example:** java.util.Base64.getUrlEncoder().encodeToString("my fancyurl".getBytes());

**Java w/ Apache Commons:** org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString("mystring".getBytes())


# Formatting & Datatypes
The typical JSON datatypes are in play when sending data: http://en.wikipedia.org/wiki/JSON#Data_types.2C_syntax_and_example

##Property Name Rules

- Names must be less than 256 characters long.
- There cannot be any periods (.) in the name.
- Names cannot be a null value.

##Property Value Rules

- String values must be less than 10,000 characters long.
- Numeric values must be between -2^63 (-9223372036854775808) and 2^63 - 1 (9223372036854775807) (inclusive).
- Values in lists must themselves follow the above rules.
- Values in dictionaries must themselves follow the above rules.
- All dates should be represented as ISO 8601 formatted dates: http://en.wikipedia.org/wiki/ISO_8601


###Country Code
Three digit numeric country code, represented as a string. For example, "001".

###Network Code
Three digit numeric code, represented as a string. For example, "345".

###User Identifiers
All use identifiers should be passed to the API as SHA1 hashed properties. We will be monitoring this and will let you know if you are nto doing this.

###Timestamp Data Types
- Two time-related properties are included in your event automatically.
- The properties “datasnap.timestamp” and “datasnap.created_at” are set at the time your event is recorded. You have the ability to overwrite the datasnap.timestamp property. This could be useful, for example, if you are backfilling historical data.
- Be sure to use ISO-8601 Format. http://en.wikipedia.org/wiki/ISO_8601
- Be sure to include the timezone

Examples:

```
**UTC Time**

"created":"2015-06-21T18:24:18+00:00"
"created":"2015-06-21T18:24:18Z"

**PST Time**

"created":"2015-06-21T18:24:18+08:00"

```

###Special internal Datasnap fields

- We denote these under the "datasnap" property in the root json payload. These will be automatically set for you
via one of our SDKs or via our backend server such as _timestamp_.
You can of course override these at any time but please be careful in doing so.

###URL Parameter "data" encoding
The following encoding should be used when sending json information into the data URL Parameter (There are ready libraries that do this in Ruby, PHP, and Javascript.)

- 'URL Safe' base64 encoding, or "RFC4648 base64url (Base 64 Encoding with URL and Filename Safe Alphabet)




# Sending Events 

##Important Information

- You can only send one organization ID (or Customer Org ID) per API request. You cannot send mupliple organization IDs or you will get a 401 error.
- Venue and organization names should **NEVER** contain underscores '_'

##Required Event Fields

| Name | Description |
|---|---|
| **organization_ids** | organization id assigned to you (optional if you send the customer_org_id property.)|
| **customer_org_id** | Required if not sending organization ID and you have setup these IDS via the Organization API.|
| **venue_org_id** | Required and represents the venue where the actual beacons are placed.|
| **customer_venue_org_id** | Required if not sending venue_org_id ID and you have setup these IDS via the Organization API.|
| **project_id** | Required Project id within that organization (typically app) |
| **event\_type** | The type of event you are sending - beacon\_sighting, geofence_depart etc.
| **global\_distinct\_id** | the unique user id associated with this event. It should go under user. |



NOTE: The maximum size of the json payload is 50 kilobytes (KB).

##Standard Events
Standard events are treated specially by Datasnap and will be automatically applied to your Reports Dimensions and Metrics. You can also send non-standard events. You can work with datasnap.io to get these integrated into your reports.



| Event                            | Description               | Event Type |
|----------------------------------|---------------------------|---|
| **status_ping** | Event used to send a test message that can be used for health monitoring and testing.  Will not be rolled up into system. | Diagnostic |
| **opt_in_location** | The user has opted in to track their location and accepted all appropriate terms of use | In App Opt In |
| **opt_in_push_notifications** | The user has opted in to receieve push notifications | In App Opt In |
| **opt_in_vendor** | A user has opted in to the vendors specific terms | In App Opt In |
| **app_installed** | The user installed the app. Most mobile analytics platforms record this already but it is a useful enough event to provide it here | In App Interactions |
| **interaction_tap** | Some tap has happened in the app. Can be associated with a camapign, communication, or just an app by itself | In App Interactions |
| **interaction_view** | Some view has happened in the app. Can be associated with a camapign, communication, or just an app by itself | In App Interactions |
| **interaction_swipe** | Some swipe has happened in the app. Can be associated with a camapign, communication, or just an app by itself | In App Interaction |
| **interaction_shake** | Some shake has happened in the app. Can be associated with a camapign, communication, or just an app by itself | In App Interaction |
| **interaction_tilt** | Some tilt has happened in the app. Can be associated with a camapign, communication, or just an app by itself | In App Interaction |
| **ds_communication_sent** | A communication has been delivered to the user. For mobile these are typically push notifications or in App Modals. | Communication Event |
| **ds_communication_open** | A communication have been opened by the user | For mobile these are typically push notifications or in App Modals. | Communication Event
| **campaign_request** | The app has requested a campaign to be show to the user | Communication Event |
| **campaign_redemption** | The user has redeemed a coupon or similar as part of the campaign | Communication Event |
| **global_position_sighting** | Records the Device/Users current global position | GPS Event |
| **beacon_arrive** | A users first time receiving a broadcast from a particular beacon | Beacon Event |
| **beacon_sighting** | A user is within a particular beacon range and has received a broadcast from the beacon | Beacon Event |
| **beacon_depart_vendor** | This event can be thrown when a vendors's SDK detect an event. For some vendors this setting can be erroneous so its recommended ot track separately for audit reporting. | Beacon Event |
| **beacon_depart** | A true departed event meaning the user has departed and we feel confident that this event is correct. Some folks use their own calculation to throw this event. | Beacon Event |
| **beacon_visit** | A true user visit into a proximity or geotrigger.  This is many times calulated by looking at sighting data or inferred through the use of the departed event. | Beacon Event |
| **beacon_visit_vendor** | A user visit into a proximity or geotrigger as sent by the beacon vendor.  This is used to compare with the true calculation of the beacon_visit event. | Beacon Event |
| **geofence_arrive** | A user has entered a Geofence | Geofence Event |
| **geofence_sighting** | A user is still in the Geofence after a interval based check of their location | Geofence Event |
| **geofence_depart** | A user has left the Geofence | Geofence Event |

## Update Events

**NOTE:** If you use the Entity API metholoogy to populate entity names and properties then you should use that to update information! http://docs.datasnapioentityapi.apiary.io/#

- Any top level properties such as place/campaign/beacon will be updated in our system if you pass along the dimension/meta fields such as beacon name. 
- You do not need to send these fields every time you send an event.
- You can also fire specific events such as place_update to clearly indicate that your updating the place/camapign/beacon data.

| Event                            | Description               | 
|----------------------------------|---------------------------|
| place_update | indicates that a place update has occurred. Usually would only contain the place | 
| campaign_update | indicates that a campaign update has occurred. usually would only contain the campaign. | 
| beacon_update | indicates that a beacon update has occurred | usually would only contain the beacon |

## Non-Standard Events
- You CAN also append any other json properties as you want at any level that you would like.

# Event Properties


We have the following top level properties that represent the current domain when dealing with proximity data and events.

These properties can automatically be updated or they can be updated as part of our Entity API. You must pick one approach to use you cannot do both at the same time.
http://docs.datasnapioentityapi.apiary.io



<p></p>

 Where did we come up with these names? Well we have a lot of experience modeling data, researched all of the leading Beacon providers, and
 of course spoke ot a lot of customers and looked at actual data that they have acquired and wanted insight for.
<section id="tags">&nbsp;</section>
##PROPERTY: TAGS
***

 All top level entities allow you to tag them. This will allow for an unlimited amount of ways in which to group and report on these entities and the events they are attached to.

```

{
    "tags":
    [
      "womens",
      "golf",
      "shoes"
    ]
}
```



<section id="organization">&nbsp;</section>
##PROPERTY: ORGANIZATION
***

 A organization is a abstract way to group your data at a high level and focus on the organizational and data access level of your data. You can assign permissions to each org and have
 a hierarchy or organizations  based on your company structure.

Please See: http://docs.datasnapioentityapi.apiary.io/#reference/organization

Only ONE organization may be passed in currently in this event/array.


```
     "organization_ids":
     [
        "3HRhnUtmtXnT1UHQHClAcP"
     ]
```

<section id="customer_org_id">&nbsp;</section>
##PROPERTY: CUSTOMER ORGANIZATION
***


To ease integraton with our parners, sometimes it is easier for events to be sent using their own internal client/Org ID.

If this is the case we allow the setting of this ID via our Organization API

Please See: http://docs.datasnapioentityapi.apiary.io/#reference/organization

Once these customer IDs have been set you can then pass the ID to the event service WITHOUT a organization_ids filed being present.

We will lookup the proper organization ID for you and add to the event automatically.

This is a top level property:

```
 "customer_org_id":"53d7ef540af5502d6f943817",
```

Example event:

```
{
 "event_type":"beacon_sighting",
 "beacon":{
    "identifier":"DatasnapTestBeacon123"
 },
 "user":{
    "id":{
       "global_distinct_id":"1"
    }
 },
 "datasnap": {
      "created": "2015-03-02T09:00:00"
},
    "customer_venue_org_id": "4PFtsr11HytMudhEt4m",
    "customer_org_id": "BsgtRg56GTGggfss",
 "project_ids":[
    "TestDatasnapApp1"
 ]
}

```

<section id="venue_org_id">&nbsp;</section>
##PROPERTY: VENUE ORGANIZATION
***

Some eports require a more specific mapping of where the beacons are actually located.   A venue is this concept and is technically an organization but is marked as a venue.

Thsi is important for Place Pathing based reports.

If this is the case we allow the setting of this ID via our Organization API. You just create a normal organization wiht the isVenue flag set to true to indicate its a venue.

Please See: http://docs.datasnapioentityapi.apiary.io/#reference/organization

This is a top level property:

```
 "venue_org_id":"53d7ef540af5502d6f943817",
```

Example event:

```
{
 "event_type":"beacon_sighting",
 "beacon":{
    "identifier":"DatasnapTestBeacon1"
 },
 "user":{
    "id":{
       "global_distinct_id":"1"
    }
 },
 "datasnap": {
      "created":"2015-06-23T00:40:15.415Z"
},
 "project_ids":[
    "peoj1234"
 ],
 "venue_org_id":"venueclientid1",
 "organization_ids": [
      "BsgtRg56GTGggfss"
    ],
 "project_name": "My cool App project"
}

```


<section id="customer_venue_org_id">&nbsp;</section>
##PROPERTY: CUSTOMER VENUE ORGANIZATION
***


To ease integraton with our parners, sometimes it is easier for events to be sent using their own internal client/Org ID.

If this is the case we allow the setting of this ID via our Organization API.

A Venue Org ID is an Org that has been created with isVenue = true indicating that it is a venue.

This is useful for place and pathing based reports.

Please See: http://docs.datasnapioentityapi.apiary.io/#reference/organization

Once these customer IDs have been set you can then pass the ID to the event service WITHOUT a organization_ids filed being present.

We will lookup the proper organization ID for you and add to the event automatically under then venue_org_id property.

This is a top level property:

```
 "customer_venue_org_id":"53d7ef540af5502d6f943817",
```

Example event:

```
{
 "event_type":"beacon_sighting",
 "beacon":{
    "identifier":"DatasnapTestBeacon1"
 },
 "user":{
    "id":{
       "global_distinct_id":"1"
    }
 },
 "datasnap": {
      "created":"2015-06-23T00:40:15.415Z"
},
 "project_ids":[
    "peoj1234"
 ],
 "customer_venue_org_id":"clientid1",
 "organization_ids": [
      "BsgtRg56GTGggfss"
    ],
 "project_name": "My cool App project"
}

```


<section id="project">&nbsp;</section>
##PROPERTY: PROJECT
***

 A project is a abstract way to group your data at a high level. Examples of project coudl include a mobile App, a Special event, or some other type of cpecial project where
 you want to group and aggregate the data for reporting purposes.

Please See: http://docs.datasnapioentityapi.apiary.io/#reference/project

Only ONE project may be passed in currently in this array.


```
     "project_ids":
     [
        "3HRhnUtmtXnT1UHQHClAcP"
     ]
```

Also note that we do allow the autogeneration of project name if you pass in tie project name at the root level. It will be assotiated with that projects_ids passed into the array.

We are working towards cleanign up this API some in the future.

```
     "project_name":"3HRhnUtmtXnT1UHQHClAcP"
```

<section id="place">&nbsp;</section>


##PROPERTY: PLACE
***

 A place is a geographic way to group sets of location properties. You can nest as many locations within a place as you want. A place is meant to represent a contiguous location.  A place contains metadata about a location and is comprised of one or more geofences, beacons or addresses. Datasnap.io uses places to determine pathing and traffic patterns.

 For example you may have a place in a stadium called main stage and within that you may have a set of beacons covering the stage (stage left, center stage, stage right).


| Attribute | Description | Example |Data Format |
| ----------|-------------| --- | ----------- |
| id     | Unique id of a place | | String |
| name   | Name of the place  |  Mission District, San Francisco Airport, Main Stage |   String |
| places | One or more places within the place | | Array |
| dwell_time   | Total time in seconds they were at this place. |   600 | Number |
| address | One or more addresses within the place | | String |
| last_place | The last place sighted by the user |  | String |
| geofences | Geofences grouped within the place |  | Array |
| beacons | Beacons grouped within the place   |   | Array |
| reporting_visibility | Whether ot Hide/Show this property in the Reporting Dashboard | | Boolean |
<br>

```
     "place": {
         "id": "placeid",
         "name": "Mission District",
         "tags": [
             "womens",
             "golf",
             "shoes"
         ],
         "places":  [
           {
               "placeid": "placeid2"
           },
           {
               "placeid": "placeid3"
           }
         ],
         "address": {
             "address1": "103 west street",
             "address2": "",
             "city": "San Francisco",
             "region": "CA",
             "zip": 94107,
             "zip4": 3422
         },
         "last_place": "placeid-3",
         "geofences": [
             {
                 "geofenceid": "geofenceid2"
             },
             {
                 "geofenceid": "geofenceid2"
             }
         ],

         "beacons": [
             {
                 "beaconid": "beaconid1"
             },
             {
                 "beaconid": "beaconid2"
             }
         ]
     }
```

<section id="gps_position">&nbsp;</section>
##PROPERTY: GLOBAL POSITION
***

 A Global Position contains all of the data coming out of the Location sensors on the device. Note that some devices can use Wifi
 and Cellular to provide some of this information int he entity below, but in general GPS is used.

 **This is the GPS of the user NOT the beacon. This will populate the map with heat-map in the UI.**

| Attribute  | Description           | Data Format  |
| --- |---| ---|
| location | Lat,long co-ordinates. **NOTE** Latitude should be first then Longitude | Array |
| altitude | Height measured in meter units      |   String |
| accuracy | Level of accuracy of the GPS (in meters)     |    String |
| course | Direction of movement | String |
| speed | Meters / second |    String |
<br>

```
"global_position":{
    "location": {
        "coordinates": [
             40.11041,
            -88.21337
        ]
    },
    "altitude": 13.00,
    "accuracy": 10,
    "course": 77.34375,
    "speed": 4.0
}
```

<section id="beacon">&nbsp;</section>
##PROPERTY: BEACON
***

 A beacon represents the actual beacon metadata and/or specific sighting data involve in the event.

 Note that in some cases that the actual rssi and dwell time are in fact dependent on a Eser entity being in play
 but we felt that this data should still remain under the Beacon entity.

 is_mobile field denotes that the beacon is moving around.The default is false if not filled in.


| Attribute       | Explanation           | Data Format  |
| --- |---| ---|
| identifier     | Unique beacon id| String |
| name     | Name of the beacon | String |
|tags | Tags applied to beacon   |   String |
| ble_uuid   | Bluetooth Low Energy uuid for the beacon      |   String |
| ble_vendor_uuid | Bluetooth Low Energy Vendor uuid for the beacon      |    String |
| ble_vendor_id | Bluetooth Low Energy Vendor id for the beacon | String |
| protocol | Beacon protocol being advertised by the beacon. Possible Values are (ibeacon, eddystone, altbeacon, gimbal) | String |
| protocol_frametype |Protocol frametype is primarily for eddystone. If no value is supplied then the protol itself is the frame type. (Examples for eddystone are: Eddystone-UID, Eddystone-URL, Eddystone-TLM) | String |
| uuid | iBeacon UUID | String |
| ibeacon_major | iBeacon Major ID | String |
| ibeacon_minor | iBeacon Minor ID | String |
|rssi | Received Signal Strength Indicator for the beacon   |   String |
| is_mobile | Denotes whether the beacon is a moving beacon or not. Should be set to True or False.    |    String |
| previous_rssi | Prior Received Signal Strength Indicator for the beacon      |    String |
| dwell_time   | Current event timestamp minus start_time timestamp  |   String |
| start_time   | Start time of the visit  |    String |
| coordinates | Lat/long coordinates of the beacon     |   Array |
| visibility | Who can see this beacon? (private or public)     |    String |
| battery_level | Current battery level of the beacon | String |
| temperature | Degrees in Fahrenheit |   String |
| hardware   | Hardware of the beacon (Gimbal, Estimote etc)     |    String |
| categories | Can represent any hierarchical category for the beacon | String |
| reporting_visibility | Whether ot Hide/Show this property in the Reporting Dashboard | | Boolean |
<br>


```
 "beacon": {
     "identifier": "SHDG-28AHD",
     "ble_uuid": "ble_uuid",
     "ble_vendor_uuid": "ble_vendor_uuid",
     "ble_vendor_id": "ble_vendor_id",
     "rssi": 80,
     "is_mobile": false,
     "previous_rssi": 70,
     "name": "Front Entrance",
     "uuid": "qwer1234wqer",
     "ibeacon_major": "12",
     "ibeacon_minor": "45",
     "protocol": "ibeacon",
     "protocol_frametype": "",
     "dwell_time": 600000,
     "start_time": "2014-08-22 14:48:02 +0000",
     "coordinates": [ 32.89545949009762,-117.19463284827117],
     "visibility": "Private",
     "battery_level": "50",
     "temperature": "68.32",
     "hardware": "HardwaretypeoftheBeacon",
     "categories": [
         {
             "Sports": {}
         },
         {
             "Womens": {
                 "subcategories": [
                     "golfshirts",
                     "dresses"
                 ]
             }
         },
         {
             "Mens": {}
         }
     ],
     "tags": [
         "womens",
         "golf",
         "shoes"
     ]
 }
```

<section id="geofence">&nbsp;</section>
##PROPERTY: GEOFENCE
***
| Attribute        | Description           | Data Format  |
| --- |---| ---|
| identifier    | Unique geofence id | String |
| name   | Name of the geofence | String |
| visibility | Who can see this beacon? (private or public) |    String |
| tags | Descriptive tags for the geofence | Array |
| geofence_circle| Use this if the geofence is a circle along with lat-long co-ordinates |   Array |
| geofence_polygon|  Use this if the geofence is a polygon along with lat-long co-ordinates |    Array |
| reporting_visibility | Whether ot Hide/Show this property in the Reporting Dashboard | | Boolean |
<br>

```
 "geofence": {
     "identifier": "geofence2",
     "name": "SF Gelen Park",
     "visibility": "ORGANIZATION",

     "tags": [
         "womens",
         "golf",
         "shoes"
     ],
     "geofence_circle": {
         "radius": 100,
         "location": {
             "coordinates": [ 32.89545949009762,-117.19463284827117],
         }
     },
     "geofence_polygon": {
         "locations":
             {
                "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },

     }

 }
```
<section id="user">&nbsp;</section>

##PROPERTY: USER
***
This is where the magic truly happens in our platform. The more User data you send to us the more insight you can get
and the more we can begin to tie sessions together to build out insight into user behavior extending out to the marketing cloud.

As you can see we accept a very large set of potential user identifiers that could be in play in the digital ecosystem.
These identifiers could come from any number of sources so we kept the properties as descriptive as possible.
You will note that while we don't specifically call our properties segments you can think of these properties being used to describe segments.

| Attribute        | Description           | Data Format  |
| --- |---| ---|
| tags     | Descriptive tags for the user | Array |
| id   | Unique user id      |   String |
| audience   | Audience characteristics of the user |    Array |
| user_properties| Extra Properties for the user | Array |
| reporting_visibility | Whether ot Hide/Show this property in the Reporting Dashboard | | Boolean |
<br>

```
"user": {
    "tags": [
        "womens",
        "golf",
        "shoes"
    ],
    "id": {
        "mobile_device_bluetooth_identifier": "128 bit string",
        "mobile_device_ios_idfa": "092384",
        "mobile_device_ios_openidfa": "09238dd4",
        "mobile_device_ios_idfv": "092344",
        "mobile_device_ios_udid": "123",
        "datasnap_uuid": "datasnap_uuid",
        "web_domain_userid": "",
        "web_cookie": "foo",
        "domain_sessionid": "fqr9fgwer8vb9",
        "web_network_userid": "billybob",
        "web_user_fingerprint": "web_user_fingerprint",
        "web_analytics_company_z_cookie": "",
        "global_distinct_id": "userid1234",
        "global_user_ipaddress": "user_ipaddress",
        "mobile_device_fingerprint": "2da076c7ad28740c0b2a9b7fa6077c4f",
        "facebook_uid": "2234433",
        "mobile_device_google_advertising_id": "googid",
        "mobile_device_google_google_advertising_id_opt_in": "true",
        "unknown": "unknownid",
        "": ""
    },
    "audience": {
        "Education": [
            "College"
        ],
        "Age": [
            "18-24"
        ],
        "Ethnicity": [
            "Caucasian"
        ],
        "Kids": [
            "NoKids"
        ],
        "Gender": [
            "Male"
        ],
        "Interests": [
            "Gettingfromheretothere",
            "Biking",
            "Automotive",
            "Automotive.Cars"
        ],
        "Income": [
            "$30-60k"
        ]
    },
    "user_properties": {
        "user_type": "VIP",
        "user_spend": "high",
        "engagement_time": "Greaterthan30minutes"
    }
}
```

<section id="communication">&nbsp;</section>
##PROPERTY: COMMUNICATION
***

You can send any type of communication to us (in-app or push notification). Communication doesn't always need to indicate
that the content actually appeared on the users device, just that a communication was sent.

| Attribute | Description | Example | Data Format  |
| --- |---| ---| ---|
| identifier     | Unique communication id | |String |
| name   | Name of the communication   | Buy hotdogs at Half Time  |   String |
| tags   | Descriptors for the communication   |   |    Array |
| description | High-level description of the communication (see content for lower-level) | | String |
| content |  content of the communication. This can be in plain text, formatted html, an image or a link | Get 10% off if you're wearing Giants hat! |   String |
| communication\_vendor\_id| id of the vendor who sent the notification |  |    String |
| status| Whether the communication was sent while the app was running in the possible values of "foreground" or "background". "background" can also mean the app was not running at all. | foreground|background  | String |
| type| Communication type (in-app or push) | in-app, push | String |
| reporting_visibility | Whether ot Hide/Show this property in the Reporting Dashboard | | Boolean |

<br>


```
"communication": {
    "description": "mydescription",
    "tags": [
        "womens",
        "golf",
        "shoes"
    ],
    "identifier": "commid",
    "status": "foreground",
    "communication_vendor_id": "airpush",
    "name": "10% offPushnotification",
    "type": {
        "id": "typeid",
        "name": "PushNotificaion"
    },
    "content": {
        "text": "get10%off!",
        "description": "get10%offifyougotothe",
        "image": "http: //appl.com/image.gif",
        "html": "<p>Hithere!!get10%offnow!!</p>",
        "url": "http: //www.apple.com"
    }
}
```
<section id="campaign">&nbsp;</section>
##PROPERTY: CAMPAIGN
***

A campaign represents all of the properties needed to deliver some form of messaging to the user and can include settings,
targeting criteria, communication id's amongst other things.

| Attribute        | Explanation           | Data Format  |
| --- |---| ---|
| identifier     | Unique campaign id | String |
| name   | Campaign name     |   String |
| tags   | Descriptors for the campaign      |    Array |
| subcampaigns | Optional sub-campaigns under the parent campaign | Array |
| targeting_rules | Campaign rules |   String |
| time_filter| Time period(s) the campaign should run for |    String |
| time_trigger| Date/time the campaign should be triggered    |    String |
| communication | Communication id associated with the campaign   |    String |
| reporting_visibility | Whether ot Hide/Show this property in the Reporting Dashboard | | Boolean |
<br>

```
"campaign": {
     "identifier": "campaignid",
     "name": "camapign10%offshoes",
     "tags": [
         "womens",
         "golf",
         "shoes"
     ],
     "subcampaigns": [
         {
             "identifier": "campaignid",
             "name": "camapign11%offshoesmles"
         }
     ],
     "targeting_rules": {
         "id": "targetingid",
         "rules": [
             {
                 "id": "ruleid1",
                 "name": "retailandclothingruleforbackofstore",
                 "place_ids": [
                     "placeid1"
                 ],
                 "audience": {
                     "Education": [
                         "NoCollege",
                         "College",
                         "GradSchool"
                     ],
                     "Age": [
                         "18-24",
                         "25-34",
                         "35-44",
                         "45-55",
                         "55+"
                     ],
                     "Ethnicity": [
                         "Caucasian",
                         "AfricanAmerican",
                         "Asian",
                         "Hispanic",
                         "Other"
                     ],
                     "Kids": [
                         "NoKids",
                         "HasKids"
                     ],
                     "Gender": [
                         "Male",
                         "Female"
                     ],
                     "Interests": [
                         "Gettingfromheretothere",
                         "Biking",
                         "Automotive",
                         "Automotive.Cars"
                     ],
                     "Income": [
                         "$0-30k",
                         "$30-60k",
                         "$60-100k",
                         "100k+"
                     ]
                 },
                 "targeting_attributes": {
                     "store_type": "retail",
                     "product_type": "clothing"
                 }
             },
             {
                 "id": "ruleid2",
                 "name": "mycoolrule2",
                 "audience": {
                     "Education": [
                         "NoCollege",
                         "College",
                         "GradSchool"
                     ],
                     "Age": [
                         "18-24",
                         "25-34",
                         "35-44",
                         "45-55",
                         "55+"
                     ],
                     "Ethnicity": [
                         "Caucasian",
                         "AfricanAmerican",
                         "Asian",
                         "Hispanic",
                         "Other"
                     ],
                     "Kids": [
                         "NoKids",
                         "HasKids"
                     ],
                     "Gender": [
                         "Male",
                         "Female"
                     ],
                     "Interests": [
                         "Gettingfromheretothere",
                         "Biking",
                         "Automotive",
                         "Automotive.Cars"
                     ],
                     "Income": [
                         "$0-30k",
                         "$30-60k",
                         "$60-100k",
                         "100k+"
                     ]
                 }
             }
         ]
     },
     "time_filter": {
         "monday": {
             "start": "08: 00",
             "end": "13: 00"
         },
         "tuesday": {
             "start": "08: 00",
             "end": "22: 00"
         }
     },
     "time_trigger": {
         "monday": "08: 00",
         "tuesday": "13: 00"
     },
      "communication_ids": [
          "commid1", "commid2"
      ]
 }
```
<section id="datasnap">&nbsp;</section>
##PROPERTY: DATASNAP
***
The datasnap.io property includes time related properties, location properties, device properties and a transaction id. Two time-related properties are included in your event automatically and are set at the time your event is recorded;
However you can also override the created property if you want. For example it my be useful to override created property if you are back-filling historical data.


- **datasnap.timestamp**
- **datasnap.created**


| Attribute       | Description           | Data Format  |
| --- |---| ---|
| timestamp     | Provided by datasnap.io server. Format: year, month, day & time: 24 hour clock & UTC offset| String |
| created   | Provided by user. Format:  year, month, day & time: 24 hour clock & UTC offset| String |
| txn_id   | Transaction id generated by the datasnap.io system | String |
| customer\_txn\_id   | Optional transaction id generated by the customer | String |
| device   | Information about the data-sending device | String |
<br>

```
"datasnap": {
        "timestamp": "2015-06-23T00:40:15.415Z",
        "created": "2015-06-23T00:40:15.415Z"
        "location": {
            "coordinates": [
                -88.21337,
                40.11041
            ]
        },
        "txn_id": "fgfgbrrwvb",
        "customer_txn_id": "fgfgbrrwvb"
        "device": {
            "user_agent": "Mozilla/5.0 (Linux; U; Android 4.0.3; ko-kr; LG-L160L Build/IML74K) AppleWebkit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30",
            "ip_address": "127.1.1.1",
            "platform": "ios",
            "os_version": "7.0",
            "model": "iPhone5",
            "manufacturer": "Apple",
            "name": "hashed device name",
            "vender_id": "63A7355F-5AF2-4E20-BE55-C3E80D0305B1",
            "carrier_name": "Verizon",
            "country_code": "1",
            "network_code": "327"
        }
    }
```
<section id="standardEvents">&nbsp;</section>
#Standard Events
***
All events **must** contain the following information:

| Attribute       | Explanation           | Data Format  |
| --- |---| ---|
| event_type     |unique descriptor for event | String |
| organization_ids   | ids assigned to the organization      |   String |
| project_ids   |ids assigned to the project      |    String |

<p></p>
**NOTE:** for properties included in events, **id's and names** must be included. e.g. "identifier" and "name" in the beacon property and
"id" and "name" in the place property


# Events Collection [/events]

### Example Events

- Example 1: Beacon Sighting 
- Example 2: Geofence Depart 
- Example 3: Campaign and Communication Event 
- Example 5: User GPS Event
- Example 6: All Possible Fields


### Create an Event [POST]





+ Request Beacon Sighting (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                 "event_type":"beacon_sighting",
                 "beacon":{
                    "identifier":"XC45-223F"
                 },
                 "user":{
                    "id":{
                       "global_distinct_id":"1234-5566-1234"
                    }
                 },
                 "datasnap": {
                      "created": "2015-06-23T00:40:15.415Z"
                },
                "venue_org_id":"stadium1234",
                 "organization_ids":[
                    "45877hh233415htdg55t"
                 ],
                 "project_ids":[
                    "IOSApp123"
                 ],
                "venue_org_id":"venueclientid1"
                }
            ]

+ Response 200 (application/json)

        { "created": true}



+ Request Geofence Depart (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                 "event_type":"geofence_depart",
                 "geofence":{
                    "identifier":"ABCStoreGeofence"
                 },
                 "user":{
                    "id":{
                       "global_distinct_id":"1234-5566-1234"
                    }
                 },
                 "datasnap": {
                      "created": "2015-06-23T00:40:15.415Z"
                },
                "venue_org_id":"stadium1234",
                 "organization_ids":[
                    "45877hh233415htdg55t"
                 ],
                 "project_ids":[
                    "IOSApp123"
                 ],
                "venue_org_id":"venueclientid1"
                }
                }
            ]

+ Response 200 (application/json)

        { "created": true}
        


+ Request GPS Event (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                "event_type":"global_position_sighting",
                 "global_position": {
                      "location": {
                        "coordinates": [
                         37.7833,
                         -122.4167
                        ]
                      },
                      "altitude": 13,
                      "accuracy": 10,
                      "course": 77.34375,
                      "speed": 4
                 },
                 "user":{
                    "id":{
                       "global_distinct_id":"1234-5566-1234"
                    }
                 },
                 "datasnap": {
                      "created": "2015-06-23T00:40:15.415Z"
                },
                "venue_org_id":"stadium1234",
                 "organization_ids":[
                    "45877hh233415htdg55t"
                 ],
                 "project_ids":[
                    "IOSApp123"
                 ],
                "venue_org_id":"venueclientid1"
                }
                }
            ]

+ Response 200 (application/json)

        { "created": true}
        




+ Request Campaign Communication Event (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                "event_type":"ds_communication_sent",
                 "campaign": {
                            "identifier": "MyCoolCampaign123",
                             "communication_ids": [
                                    "MyCoolMessage123"
                                ]
                            
                },
                "communication": {
                            "identifier": "MyCoolMessage123"
                 },
                 "user":{
                    "id":{
                       "global_distinct_id":"1234-5566-1234"
                    }
                 },
                 "datasnap": {
                      "created": "2015-06-23T00:40:15.415Z"
                },
                "venue_org_id":"stadium1234",
                 "organization_ids":[
                    "45877hh233415htdg55t"
                 ],
                 "project_ids":[
                    "IOSApp123"
                 ],
                "venue_org_id":"venueclientid1"
                }
                }
            ]

+ Response 200 (application/json)

        { "created": true}


        



+ Request All Fields (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
            {
                "event_type": "beacon_depart",
                "organization_ids": [
                    "3HRhnUtmtXnT1UHQHClAcP"
                ],
                "project_ids": [
                    "3HRhnUtmtXnT1UHQHClAcP"
                ],
                "venue_org_id":"venueclientid1"
                },
                "place": {
                    "id": "placeid",
                    "name": "Mission District",
                    "dwell_time": 600000,
                    "reporting_visibility": 1,
                    "tags": [
                        "womens",
                        "golf",
                        "shoes"
                    ],
                    "places":  [ 
                        {
                            "placeid": "placeid2"
                        },
                        {
                            "placeid": "placeid3"
                        }
                    ],
                    "address": {
                        "address1": "103 west street",
                        "address2": "",
                        "city": "San Francisco",
                        "region": "CA",
                        "zip": 94107,
                        "zip4": 3422
                    },
                    "last_place": "placeid-3",
                    "geofences": [
                        {
                            "geofenceid": "geofenceid2"
                        },
                        {
                            "geofenceid": "geofenceid2"
                        }
                    ],
                    "beacons": [
                        {
                            "beaconid": "beaconid1"
                        },
                        {
                            "beaconid": "beaconid2"
                        }
                    ]
                },
                "geofence": {
                    "identifier": "geofence2",
                    "name": "SF Gelen Park",
                    "visibility": "ORGANIZATION",
                    "dwell_time": 600000,
                    "start_time": "2014-12-14T20:24:01.123+00:00",
                    "last_update_time": "2014-12-14T20:24:01.123+00:00",
                    "reporting_visibility": 1,
                    "tags": [
                        "womens",
                        "golf",
                        "shoes"
                    ],
                    "geofence_circle": {
                        "radius": 100,
                        "coordinates": [
                            -88.21337,
                            40.11041
                        ]
                    },
                    "geofence_polygon": {
                        "locations": [
                            {
                                "coordinates": [
                                    32.8953153522896,
                                    -117.19559844351653
                                ]
                            },
                            {
                                "coordinates": [
                                    32.8954009341414,
                                    -117.19516929007415
                                ]
                            },
                            {
                                "coordinates": [
                                    32.89564867061472,
                                    -117.1949815354431
                                ]
                            },
                            {
                                "coordinates": [
                                    32.89545949009762,
                                    -117.19463284827117
                                ]
                            },
                            {
                                "coordinates": [
                                    32.894986537037255,
                                    -117.19496544218902
                                ]
                            },
                            {
                                "coordinates": [
                                    32.894864920127866,
                                    -117.19554479933623
                                ]
                            }
                        ]
                    }
                },
                "global_position":{
                    "location": {
                        "coordinates": [
                            -88.21337,
                            40.11041
                        ]
                    },
                    "altitude": 13.00,
                    "accuracy": 10,
                    "course": 77.34375,
                    "speed": 4.0
                },
                "beacon": {
                    "vendor_identifier": "SHDG-28AHD",
                    "vendor": "gimbal",
                    "identifier": "SHDG-28AHD",
                    "ble_uuid": "ble_uuid",
                    "ble_vendor_uuid": "ble_vendor_uuid",
                    "ble_vendor_id": "ble_vendor_id",
                    "rssi": 80,
                    "previous_rssi": 70,
                    "name": "Front Entrance",
                    "dwell_time": 600000,
                    "is_mobile": false,
                    "start_time": "2014-12-14T20:24:01.123000+00:00",
                    "coordinates": [
                        32.89545949009762,
                        -117.19463284827117
                    ],
                    "visibility": "Private",
                    "reporting_visibility": 1,
                    "battery_level": 50,
                    "temperature": 68.32,
                    "hardware": "HardwaretypeoftheBeacon",
                    "categories": [
                        {
                            "Sports": {}
                        },
                        {
                            "Womens": {
                                "subcategories": [
                                    "golfshirts",
                                    "dresses"
                                ]
                            }
                        },
                        {
                            "Mens": {}
                        }
                    ],
                    "tags": [
                        "womens",
                        "golf",
                        "shoes"
                    ]
                },
                "communication": {
                    "reporting_visibility": 1,
                    "description": "mydescription",
                    "tags": [
                        "womens",
                        "golf",
                        "shoes"
                    ],
                    "identifier": "commid",
                    "status": "active",
                    "vendor": "airpush",
                    "vendor_identifier": "1234",
                    "name": "10% offPushnotification",
                    "type": {
                        "id": "typeid",
                        "name": "PushNotificaion"
                    },
                    "content": {
                        "text": "get10%off!",
                        "description": "get10%offifyougotothe",
                        "image": "http: //appl.com/image.gif",
                        "html": "<p>Hithere!!get10%offnow!!</p>",
                        "url": "http: //www.apple.com"
                    }
                },
                "user": {
                    "reporting_visibility": 1,
                    "tags": [
                        "womens",
                        "golf",
                        "shoes"
                    ],
                    "id": {
                        "mobile_device_bluetooth_identifier": "8c4e1f232810d11be96edf47674f5641296a76f5",
                        "mobile_device_ios_idfa": "1a847de9f24b18eee3fac634b833b7887b32dea3",
                        "mobile_device_ios_openidfa": "09238dd4",
                        "mobile_device_ios_idfv": "092344",
                        "mobile_device_ios_udid": "123",
                        "datasnap_uuid": "datasnap_uuid",
                        "datasnap_app_user_id": "3474284734",
                        "web_domain_userid": "",
                        "web_cookie": "foo",
                        "domain_sessionid": "fqr9fgwer8vb9",
                        "web_network_userid": "billybob",
                        "web_user_fingerprint": "web_user_fingerprint",
                        "web_analytics_company_z_cookie": "",
                        "global_distinct_id": "userid1234",
                        "global_user_ipaddress": "user_ipaddress",
                        "mobile_device_fingerprint": "2da076c7ad28740c0b2a9b7fa6077c4f",
                        "facebook_uid": "2234433",
                        "mobile_device_google_advertising_id": "googid",
                        "mobile_device_google_google_advertising_id_opt_in": "true",
                        "unknown": "unknownid",
                        "": ""
                    },
                    "opt_in_location": true,
                    "opt_in_push_notifications": true,
                    "opt_in_vendor": true,
                    "audience": {
                        "Education": [
                            "College"
                        ],
                        "Age": [
                            "18-24"
                        ],
                        "Ethnicity": [
                            "Caucasian"
                        ],
                        "Kids": [
                            "NoKids"
                        ],
                        "Gender": [
                            "Male"
                        ],
                        "Interests": [
                            "Gettingfromheretothere",
                            "Biking",
                            "Automotive",
                            "Automotive.Cars"
                        ],
                        "Income": [
                            "$30-60k"
                        ]
                    },
                    "user_properties": {
                        "user_type": "VIP",
                        "user_spend": "high",
                        "engagement_time": "Greaterthan30minutes"
                    }
                },
                "campaign": {
                    "identifier": "campaignid",
                    "name": "camapign10%offshoes",
                    "vendor":"urbanairship",
                    "vendor_identifier": "1234",
                    "reporting_visibility": 1,
                    "tags": [
                        "womens",
                        "golf",
                        "shoes"
                    ],
                    "subcampaigns": [
                        {
                            "identifier": "campaignid",
                            "name": "camapign11%offshoesmles"
                        }
                    ],
                    "targeting_rules": {
                        "identifier": "targetingid",
                        "rules": [
                            {
                                "identifier": "ruleid1",
                                "name": "retailandclothingruleforbackofstore",
                                "place_ids": [
                                    "placeid1"
                                ],
                                "audience": {
                                    "Education": [
                                        "NoCollege",
                                        "College",
                                        "GradSchool"
                                    ],
                                    "Age": [
                                        "18-24",
                                        "25-34",
                                        "35-44",
                                        "45-55",
                                        "55+"
                                    ],
                                    "Ethnicity": [
                                        "Caucasian",
                                        "AfricanAmerican",
                                        "Asian",
                                        "Hispanic",
                                        "Other"
                                    ],
                                    "Kids": [
                                        "NoKids",
                                        "HasKids"
                                    ],
                                    "Gender": [
                                        "Male",
                                        "Female"
                                    ],
                                    "Interests": [
                                        "Gettingfromheretothere",
                                        "Biking",
                                        "Automotive",
                                        "Automotive.Cars"
                                    ],
                                    "Income": [
                                        "$0-30k",
                                        "$30-60k",
                                        "$60-100k",
                                        "100k+"
                                    ]
                                },
                                "targeting_attributes": {
                                    "store_type": "retail",
                                    "product_type": "clothing"
                                }
                            },
                            {
                                "identifier": "ruleid2",
                                "name": "mycoolrule2",
                                "audience": {
                                    "Education": [
                                        "NoCollege",
                                        "College",
                                        "GradSchool"
                                    ],
                                    "Age": [
                                        "18-24",
                                        "25-34",
                                        "35-44",
                                        "45-55",
                                        "55+"
                                    ],
                                    "Ethnicity": [
                                        "Caucasian",
                                        "AfricanAmerican",
                                        "Asian",
                                        "Hispanic",
                                        "Other"
                                    ],
                                    "Kids": [
                                        "NoKids",
                                        "HasKids"
                                    ],
                                    "Gender": [
                                        "Male",
                                        "Female"
                                    ],
                                    "Interests": [
                                        "Gettingfromheretothere",
                                        "Biking",
                                        "Automotive",
                                        "Automotive.Cars"
                                    ],
                                    "Income": [
                                        "$0-30k",
                                        "$30-60k",
                                        "$60-100k",
                                        "100k+"
                                    ]
                                }
                            }
                        ]
                    },
                    "time_filter": {
                        "monday": {
                            "start": "08: 00",
                            "end": "13: 00"
                        },
                        "tuesday": {
                            "start": "08: 00",
                            "end": "22: 00"
                        }
                    },
                    "time_trigger": {
                        "monday": "08: 00",
                        "tuesday": "13: 00"
                    },
                    "communication_ids": [
                        "commid1", "commid2"
                    ]
                },
                "datasnap": {
                "timestamp": "2015-06-23T00:40:15.415Z",
                "created": "2015-06-23T00:40:15.415Z",
                "txn_id": "fgfgbrrwvb",
                "customer_txn_id": "fgfgbrrwvb",
                "device": {
                    "user_agent": "Mozilla/5.0 (Linux; U; Android 4.0.3; ko-kr; LG-L160L Build/IML74K) AppleWebkit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30",
                    "ip_address": "127.1.1.1",
                    "platform": "ios",
                    "os_version": "7.0",
                    "model": "iPhone5",
                    "manufacturer": "Apple",
                    "name": "hashed device name",
                    "vendor_id": "63A7355F-5AF2-4E20-BE55-C3E80D0305B1",
                    "carrier_name": "Verizon",
                    "country_code": "001",
                    "network_code": "327"
                }
                }
            },
            {
                "event_type": "beacon_sighting"
            }
            ]

+ Response 200 (application/json)

        { "created": true}









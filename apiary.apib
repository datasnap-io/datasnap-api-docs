FORMAT: 1A
HOST: https://api-events.datasnap.io/v1.0/



# Datasnap.io Events API
The datasnap.io Events API allows you to send any kind of event to the datasnap.io platform for reporting and measurement. 
There are a set of out-of-the-box events that will automatically show up on your dashboards. You may also send non-standard events, which we can analyze separately.


Please see http://datasnap-io.github.io/index.html for detailed use cases and the design guide, illustrating the
best way to send us data.  


Terms and Conditions: http://www.datasnap.io/terms.html#apiterms 

## Authentication and API Keys

You will get an API key and an API Secret for access.

In order to authorize, base64 encode the key and secret together. You can use this Linux command to create the base64 string:

                echo -n "APIKey:APISecret" | openssl base64
After encoding, add it to the headers as "Authorization:  Basic < Put Base64 String here>"


####Examples

**Java Example:**
```
java.util.Base64.getUrlEncoder().encodeToString("my fancyurl".getBytes());
```

**Java w/ Apache Commons:**
```
org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString("mystring".getBytes())
```


## Formatting and Datatypes
The typical JSON datatypes are in play when sending data: http://en.wikipedia.org/wiki/JSON#Data_types.2C_syntax_and_example

### Property Name Rules

- Names must be less than 256 characters long.
- There cannot be any periods (.) in the name.
- Names cannot be a null value.

### Property Value Rules

- String values must be less than 10,000 characters long.
- Numeric values must be between -2^63 (-9223372036854775808) and 2^63 - 1 (9223372036854775807) (inclusive).
- Values in lists must themselves follow the above rules.
- Values in dictionaries must themselves follow the above rules.
- All dates should be represented as ISO 8601 formatted dates: http://en.wikipedia.org/wiki/ISO_8601


#### Country Code
Three digit numeric country code, represented as a string. For example, "001".

#### Network Code
Three digit numeric code, represented as a string. For example, "345".

### User Identifiers
All user identifiers should be passed to the API as SHA1 hashed properties. We will be monitoring this and will let you know if you are not doing this.

### Timestamp Data Types
- Two time-related properties are included in your event automatically.
- The properties “datasnap.timestamp” and “datasnap.created_at” are set at the time your event is recorded. You have the ability to overwrite the datasnap.timestamp property. This could be useful, for example, if you are backfilling historical data.
- Be sure to use ISO-8601 Format. http://en.wikipedia.org/wiki/ISO_8601
- Be sure to include the timezone.

Examples:

```
**UTC Time**

"created":"2015-06-21T18:24:18+00:00"
"created":"2015-06-21T18:24:18Z"

**PST Time**

"created":"2015-06-21T18:24:18+08:00"

```

### Special Internal Datasnap Fields

- We denote these under the "datasnap" property in the root JSON payload. These will be automatically set for you
via one of our SDKs or via our backend server such as _timestamp_.
You can of course override these at any time, but please be careful in doing so.

### URL Parameter "data" Encoding
The following encoding should be used when sending JSON information into the data URL Parameter (There are ready libraries that do this in Ruby, PHP, and Javascript).

- 'URL Safe' base64 encoding

OR
- "RFC4648 base64url (Base 64 Encoding with URL and Filename Safe Alphabet)




## Sending Events

### Important Information

- You can only send one `organization_id` (or `customer_org_id`) per API request. You cannot send mupliple organization IDs or you will get a 401 error.
- Venue and organization names should **NEVER** contain underscores '_'
- When sending a **campaign event** you must send the `advertiser_org_id`, the `project_id` and the `organization_id` that own the app
- When sending a **beacon event** you must send the the `project_id`, the `venue_org_id` and the `organization_id` that own the app


### Required Event Fields

Events require certain IDs in order to successfully post.  At a minimum, identifying the organization, project, venue and user are required.
**Additional properties included in events must also include their respective IDs and names.** For example, include `identifier` and `name` in the _beacon_ property and
`id` and `name` in the _place_ property

<p></p>

All events **must** contain the following information:

| Attribute | Description | Data Format |
|---|---| ---|
| **organization_ids** | Organization ID assigned to you (optional if you send the `customer_org_id` property.)| String |
| **venue_org_id** | Required. Represents the venue where the actual beacons are placed (optional if you send the `customer_venue_org_id` property.).| String |
| **project_id** | Required Project ID within that organization (typically represents the app). | String |
| **event\_type** | The type of event you are sending - beacon\_sighting, geofence_depart etc.|  String |
| **global\_distinct\_id** | The unique user ID associated with this event. It should go under user. | String |
| **advertiser_org_id** | Required only if sending campaign/communication events. Represents the Advertiser to whom the app is sending communication.| String |

**NOTE:** The maximum size of the JSON payload is 50 kilobytes (KB).

<br>
Using `customer_` properties is also valid if you set up interal IDs using the Entity API:

| Attribute | Description | Data Format |
|---|---| ---|
| **customer_org_id** | Required if not sending `organization_id` and you have setup these IDs via the Organization API.| String |
| **customer_venue_org_id** | Required if not sending `venue_org_id` and you have setup these IDs via the Organization API.| String |
| **customer_advertiser_org_id** | Required if not sending `advertiser_org_id` and you have setup these IDs via the Organization API.| String |


<section id="standardEvents">&nbsp;</section>
### Standard Events
Standard events, treated specially by Datasnap, are automatically applied to your Reports Dimensions and Metrics. You can also send non-standard events by working with datasnap.io to get these integrated into your reports.


| Event                            | Description               | Event Type |
|----------------------------------|---------------------------|---|
| **status_ping** | Event used to send a test message that can be used for health monitoring and testing.  Will not be rolled up into system. | Diagnostic |
| **opt_in_location** | The user has opted-in to track his or her location and accepted all appropriate terms of use. | In-App Opt-In |
| **opt_in_push_notifications** | The user has opted-in to receieve push notifications. | In-App Opt-In |
| **opt_in_vendor** | A user has opted-in to the vendors specific terms. | In-App Opt-In |
| **app_installed** | The user installed the app. Most mobile analytics platforms record this already, but it is a useful enough event to provide it here. | In-App Interactions |
| **ds_communication_sent** | A communication has been delivered to the user. For mobile, these are typically push notifications or In-App Modals. | Communication Event |
| **ds_communication_open** | A communication have been opened by the user. | For mobile these are typically push notifications or In-App Modals. | Communication Event
| **global_position_sighting** | Records the Device/Users current global position. | GPS Event |
| **beacon_arrive** | A user's first time receiving a broadcast from a particular beacon. | Beacon Event |
| **beacon_sighting** | A user is within a particular beacon range and has received a broadcast from the beacon. | Beacon Event |
| **beacon_depart** | A true departed event, meaning the user has departed, and we feel confident that this event is correct. Apps can also use their own calculation to throw this event. | Beacon Event |
| **geofence_depart** | A user has left the Geofence. | Geofence Event |


<!--| Event                            | Description               | Event Type |-->
<!--|----------------------------------|---------------------------|---|-->
<!--| **status_ping** | Event used to send a test message that can be used for health monitoring and testing.  Will not be rolled up into system. | Diagnostic |-->
<!--| **opt_in_location** | The user has opted-in to track his or her location and accepted all appropriate terms of use. | In-App Opt-In |-->
<!--| **opt_in_push_notifications** | The user has opted-in to receieve push notifications. | In-App Opt-In |-->
<!--| **opt_in_vendor** | A user has opted-in to the vendors specific terms. | In-App Opt-In |-->
<!--| **app_installed** | The user installed the app. Most mobile analytics platforms record this already, but it is a useful enough event to provide it here. | In-App Interactions |-->
<!--| **interaction_tap** | Some tap has happened in the app. Can be associated with a campaign, communication, or just an app by itself. | In-App Interactions |-->
<!--| **interaction_view** | Some view has happened in the app. Can be associated with a campaign, communication, or just an app by itself. | In-App Interactions |-->
<!--| **interaction_swipe** | Some swipe has happened in the app. Can be associated with a campaign, communication, or just an app by itself. | In-App Interaction |-->
<!--| **interaction_shake** | Some shake has happened in the app. Can be associated with a campaign, communication, or just an app by itself. | In-App Interaction |-->
<!--| **interaction_tilt** | Some tilt has happened in the app. Can be associated with a campaign, communication, or just an app by itself. | In-App Interaction |-->
<!--| **ds_communication_sent** | A communication has been delivered to the user. For mobile, these are typically push notifications or In-App Modals. | Communication Event |-->
<!--| **ds_communication_open** | A communication have been opened by the user. | For mobile these are typically push notifications or In-App Modals. | Communication Event-->
<!--| **campaign_request** | The app has requested a campaign be shown to the user. | Communication Event |-->
<!--| **campaign_redemption** | The user has redeemed a coupon or similar as part of the campaign. | Communication Event |-->
<!--| **global_position_sighting** | Records the Device/Users current global position. | GPS Event |-->
<!--| **beacon_arrive** | A user's first time receiving a broadcast from a particular beacon. | Beacon Event |-->
<!--| **beacon_sighting** | A user is within a particular beacon range and has received a broadcast from the beacon. | Beacon Event |-->
<!--| **beacon_depart_vendor** | This event can be thrown when a vendor's SDK detects an event. This setting can be erroneous for some vendors, so it's recommended to track it separately for audit reporting. | Beacon Event |-->
<!--| **beacon_depart** | A true departed event, meaning the user has departed, and we feel confident that this event is correct. Apps can also use their own calculation to throw this event. | Beacon Event |-->
<!--| **beacon_visit** | A true user visit into a proximity or geotrigger.  This is calulated many times by looking at sighting data or inferred through the use of the departed event. | Beacon Event |-->
<!--| **beacon_visit_vendor** | A user visit into a proximity or geotrigger as sent by the beacon vendor.  This is used to compare with the true calculation of the `beacon_visit` event. | Beacon Event |-->
<!--| **geofence_arrive** | A user has entered a Geofence. | Geofence Event |-->
<!--| **geofence_sighting** | A user is still in the Geofence after a interval-based check of their location. | Geofence Event |-->
<!--| **geofence_depart** | A user has left the Geofence. | Geofence Event |-->


### Non-Standard Events
You CAN also append any other desired JSON properties at any level that you would like.


<br>
## Event Properties

The following top-level properties represent the current domain dealing with proximity data and events.

These properties can be updated as part of our Entity API.
Please See: http://docs.datasnapioentityapi.apiary.io


<p></p>

 _Where did we come up with these names?_ We have a lot of experience modeling data. After researching the leading Beacon providers and speaking to a lot of customers about their acquired data for which they wanted insights, we created this naming convention.
<section id="tags">&nbsp;</section>
<!--### PROPERTY: TAGS-->
<!--***-->

<!-- All top-level entities allow you to tag them. This grants unlimited ways to group and report on these entities and the events attached to them.-->

<!--```-->

<!--{-->
<!--    "tags":-->
<!--    [-->
<!--      "womens",-->
<!--      "golf",-->
<!--      "shoes"-->
<!--    ]-->
<!--}-->
<!--```-->



<section id="organization">&nbsp;</section>
### PROPERTY: ORGANIZATION
***

 An _organization_ is an abstract way to group your data at a high level. Organizations are the topmost access level to your data. You can assign permissions to each organization and have
 a hierarchy or organizations  based on your company structure.

Please See: http://docs.datasnapioentityapi.apiary.io/#reference/organization

Only ONE organization may currently be passed in this event/array.


```
     "organization_ids":
     [
        "3HRhnUtmtXnT1UHQHClAcP"
     ]
```

<section id="customer_org_id">&nbsp;</section>
### PROPERTY: CUSTOMER ORGANIZATION
***


To ease integraton with our partners, sometimes it is easier for events to be sent using their own internal client/Org ID.

In this case, `customer_org_id` can be set via our Organization API.

Please See: http://docs.datasnapioentityapi.apiary.io/#reference/organization

After these customer IDs are set, you can pass the ID to the event service **without** an `organization_ids` field present.

The proper organization ID will be looked up and added to the event automatically.

This is a top level-property:

```
 "customer_org_id":"53d7ef540af5502d6f943817",
```

Example event:

```
{
 "event_type":"beacon_sighting",
 "beacon":{
    "identifier":"DatasnapTestBeacon123"
 },
 "user":{
    "id":{
       "global_distinct_id":"1"
    }
 },
 "datasnap": {
      "created": "2015-03-02T09:00:00"
},
    "customer_venue_org_id": "4PFtsr11HytMudhEt4m",
    "customer_org_id": "BsgtRg56GTGggfss",
 "project_ids":[
    "TestDatasnapApp1"
 ]
}

```

<section id="venue_org_id">&nbsp;</section>
### PROPERTY: VENUE ORGANIZATION
***

The _venue_ property is a specialized type of organization that is useful when more specific beacon mapping is required.

Set the `venue_org_id` via the Organization API. Simply create a normal organization with the flag `"isVenue": true` indicating that it is a venue.

Please see: http://docs.datasnapioentityapi.apiary.io/#reference/organization

This is a top-level property:

```
 "venue_org_id":"53d7ef540af5502d6f943817",
```

Example event:

```
{
 "event_type":"beacon_sighting",
 "beacon":{
    "identifier":"DatasnapTestBeacon1"
 },
 "user":{
    "id":{
       "global_distinct_id":"1"
    }
 },
 "datasnap": {
      "created":"2015-06-23T00:40:15.415Z"
},
 "project_ids":[
    "peoj1234"
 ],
 "venue_org_id":"venueclientid1",
 "organization_ids": [
      "BsgtRg56GTGggfss"
    ],
 "project_name": "My cool App project"
}

```


<section id="customer_venue_org_id">&nbsp;</section>
### PROPERTY: CUSTOMER VENUE ORGANIZATION
***
The _venue_ property is a specialized type of organization that is useful when more specific beacon mapping is required.

To ease integraton with our partners, sometimes it is easier for events to be sent using their own internal client/Org ID.

If you require a client-specific venue ID, you can set `customer_venue_org_id` via the Organization API.

Please See: http://docs.datasnapioentityapi.apiary.io/#reference/organization

After these customer IDs are set, you can pass the ID to the event service **without** an `organization_ids` field present.

The proper organization ID will be looked up and added to the event automatically under the `venue_org_id` property.


This is a top-level property:

```
 "customer_venue_org_id":"53d7ef540af5502d6f943817",
```

Example event:

```
{
 "event_type":"beacon_sighting",
 "beacon":{
    "identifier":"DatasnapTestBeacon1"
 },
 "user":{
    "id":{
       "global_distinct_id":"1"
    }
 },
 "datasnap": {
      "created":"2015-06-23T00:40:15.415Z"
},
 "project_ids":[
    "peoj1234"
 ],
 "customer_venue_org_id":"clientid1",
 "organization_ids": [
      "BsgtRg56GTGggfss"
    ],
 "project_name": "My cool App project"
}

```

<section id="advertiser_org_id">&nbsp;</section>
### PROPERTY: ADVERTISER ORGANIZATION
***

In many cases, you will be running campaigns on behalf of third parties via a network-like model.  If this is the case, create these advertisers as children within
your organization and send events indicating the campaign's advertiser. 

Set the `advertiser_org_id` via the Organization API. Simply create a normal organization with the flag `"isAdvertiser": true` indicating that it is an advertiser. Please See: http://docs.datasnapioentityapi.apiary.io/#reference/organization

**NOTE:** If you do not pass in an `advertiser_org_id` or if you pass in an invalid `advertiser_org_id`, the campaign event will default to the `organization_id` organization.

```
 "advertiser_org_id":"53d7ef540af5502d6f943817",
```

Example event:

```

    {
        "event_type": "ds_communication_sent",
        "campaign": {
            "advertiser_org_id": "543eb3440af5500176d37f34",
            "identifier": "Campaign1",
            "name": "Campaign 1 Name"
        },
        "communication": {
             "advertiser_org_id": "543eb3440af5500176d37f34",
             "identifier": "Campaign1-Message1",
             "name": "Campaign1-Message1 Name"
         },
         "user":{
            "id":{
               "global_distinct_id":"1"
            }
         },
        "customer_org_id": "54be7fc90af5506441788a49",
        "customer_venue_org_id": "54be7fc90af5506441788a49",
        "project_ids": [
            "5Nbojj94kQe6MW83yHyzCE"
        ]

    }


```


<section id="customer_advertiser_org_id">&nbsp;</section>
### PROPERTY: CUSTOMER ADVERTISER ORGANIZATION
***
An `advertiser_org_id` is an organization that has been created with `"isAdvertiser": true` indicating that it is an advertiser.

To ease integraton with our partners, sometimes it is easier for events to be sent using their own internal client/Org ID.

If you require a customer-specific advertiser ID, you can set `customer_advertiser_org_id` via the Organization API.

After these customer IDs are set, you can pass the ID to the event service **without** the `advertiser_org_id` field present.

The proper organization ID will be looked up and added to the event automatically under the `advertiser_org_id` property.

**NOTE:** If you do not pass in an `advertiser_org_id` or if you pass in an invalid `advertiser_org_id`, the campaign event will default to the `organization_id` organization.


```
 "customer_advertiser_org_id":"53d7ef540af5502d6f943817",
```

Example event:

```
    {
        "event_type": "ds_communication_sent",
        "campaign": {
            "customer_advertiser_org_id": "543eb3440af5500176d37f34",
            "identifier": "Campaign1",
            "name": "Campaign 1 Name"
        },
        "communication": {
             "customer_advertiser_org_id": "543eb3440af5500176d37f34",
             "identifier": "Campaign1-Message1",
             "name": "Campaign1-Message1 Name"
         },
         "user":{
            "id":{
               "global_distinct_id":"1"
            }
         },
        "customer_org_id": "54be7fc90af5506441788a49",
        "customer_venue_org_id": "54be7fc90af5506441788a49",
        "project_ids": [
            "5Nbojj94kQe6MW83yHyzCE"
        ]

    }

```


<section id="project">&nbsp;</section>
### PROPERTY: PROJECT
***

A _project_ is an abstract way to group your data at a high level. Oftentimes, the _project_ represents the mobile app or
some other type of special project where you want to group and aggregate data for reporting purposes.
 
Please See: http://docs.datasnapioentityapi.apiary.io/#reference/project for setting up projects.

Only ONE project may be passed in this array.


```
     "project_ids":
     [
        "3HRhnUtmtXnT1UHQHClAcP"
     ]
```


<!--<section id="place">&nbsp;</section>-->


<!--### PROPERTY: PLACE-->
<!--***-->

<!--A _place_ is a geographic way to group sets of contiguous locations. -->
<!--A _place_ contains metadata about a location and is comprised of one or more geofences, beacons or addresses. -->

<!--For example, you may have a place in a stadium called "Main Stage," and within that, you may have a set of beacons covering the stage ("Stage left," "Center Stage," "Stage Right").-->

<!--Datasnap.io uses places to determine pathing and traffic patterns. You must set up places to see data in the pathing widget.-->

<!--| Attribute | Description | Example |Data Format |-->
<!--| ----------|-------------| --- | ----------- |-->
<!--| id     | Unique id of a place | Stage-01  | String |-->
<!--| name   | Name of the place  |  Mission District, San Francisco Airport, Main Stage |   String |-->
<!--| places | One or more places within the place | | Array |-->
<!--| dwell_time   | Total time in seconds a user was at this place |   600 | Number |-->
<!--| address | One or more addresses within the place | | String |-->
<!--| last_place | The last place sighted by the user |  | String |-->
<!--| geofences | Geofences grouped within the place |  | Array |-->
<!--| beacons | Beacons grouped within the place   |   | Array |-->
<!--| reporting_visibility | Whether to Hide/Show this property in the Reporting Dashboard | | Boolean |-->
<!--<br>-->

<!--```-->
<!--     "place": {-->
<!--         "id": "placeid",-->
<!--         "name": "Mission District",-->
<!--         "tags": [-->
<!--             "womens",-->
<!--             "golf",-->
<!--             "shoes"-->
<!--         ],-->
<!--         "places":  [-->
<!--           {-->
<!--               "placeid": "placeid2"-->
<!--           },-->
<!--           {-->
<!--               "placeid": "placeid3"-->
<!--           }-->
<!--         ],-->
<!--         "address": {-->
<!--             "address1": "103 west street",-->
<!--             "address2": "",-->
<!--             "city": "San Francisco",-->
<!--             "region": "CA",-->
<!--             "zip": 94107,-->
<!--             "zip4": 3422-->
<!--         },-->
<!--         "last_place": "placeid-3",-->
<!--         "geofences": [-->
<!--             {-->
<!--                 "geofenceid": "geofenceid2"-->
<!--             },-->
<!--             {-->
<!--                 "geofenceid": "geofenceid2"-->
<!--             }-->
<!--         ],-->

<!--         "beacons": [-->
<!--             {-->
<!--                 "beaconid": "beaconid1"-->
<!--             },-->
<!--             {-->
<!--                 "beaconid": "beaconid2"-->
<!--             }-->
<!--         ]-->
<!--     }-->
<!--```-->

<section id="gps_position">&nbsp;</section>
### PROPERTY: GLOBAL POSITION
***

 A _Global Position_ contains all of the data coming out of the device's location sensors. Some devices can use WiFi
 and cellular to provide some of this information in the entity below, but in general, GPS is used.

 **This is the GPS of the user, NOT the beacon. This will populate the heat-map in the UI.**

| Attribute  | Description           | Data Format  |
| --- |---| ---|
| location | Lat, long coordinates. <br> **NOTE:** Latitude should be first then Longitude | Array |
| altitude | Height measured in meter units      |   String |
| accuracy | Level of accuracy of the GPS (in meters)     |    String |
| course | Direction of movement | String |
| speed | Meters / second |    String |
<br>

```
"global_position":{
    "location": {
        "coordinates": [
             40.11041,
            -88.21337
        ]
    },
    "altitude": 13.00,
    "accuracy": 10,
    "course": 77.34375,
    "speed": 4.0
}
```


<section id="beacon">&nbsp;</section>
### PROPERTY: BEACON
***

 A _beacon_ represents the actual beacon metadata and/or specific sighting data involved in the event.

In some cases, the actual RSSI and dwell time are dependent on a User entity being in play,
 but we felt that this data should still remain under the Beacon entity.

 `is_mobile` field denotes that the beacon is moving around. The default is `false` if not filled in.


| Attribute       | Explanation           | Data Format  |
| --- |---| ---|
| identifier     | Unique beacon ID| String |
| name     | Name of the beacon | String |
|tags | Tags applied to the beacon   |   String |
| ble_uuid   | Bluetooth Low Energy UUID for the beacon      |   String |
| ble_vendor_uuid | Bluetooth Low Energy Vendor UUID for the beacon      |    String |
| ble_vendor_id | Bluetooth Low Energy Vendor ID for the beacon | String |
| protocol | Advertised beacon protocol. Possible values include ibeacon, eddystone, altbeacon, gimbal | String |
| protocol_frametype |Protocol frametype is primarily for eddystone. If no value is supplied, then the protocol itself is the frame type. (Examples for eddystone are: `Eddystone-UID`, `Eddystone-URL`, `Eddystone-TLM`) | String |
| uuid | iBeacon UUID | String |
| ibeacon_major | iBeacon Major ID | String |
| ibeacon_minor | iBeacon Minor ID | String |
|rssi | Received Signal Strength Indicator for the beacon   |   String |
| is_mobile | Denotes whether the beacon is a moving beacon or not. Should be set to True or False.    |    String |
| previous_rssi | Prior Received Signal Strength Indicator for the beacon      |    String |
| dwell_time   | Current event timestamp minus `start_time` timestamp  |   String |
| start_time   | Start time of the visit  |    String |
| coordinates | Lat/long coordinates of the beacon     |   Array |
| visibility | Who can see this beacon? (Private or Public)     |    String |
| battery_level | Current battery level of the beacon | String |
| temperature | Degrees in Fahrenheit |   String |
| hardware   | Hardware of the beacon (Gimbal, Estimote etc)     |    String |
| categories | Can represent any hierarchical category for the beacon | String |
| reporting_visibility | Whether to Hide/Show this property in the Reporting Dashboard | | Boolean |
<br>


```
 "beacon": {
     "identifier": "SHDG-28AHD",
     "ble_uuid": "ble_uuid",
     "ble_vendor_uuid": "ble_vendor_uuid",
     "ble_vendor_id": "ble_vendor_id",
     "rssi": 80,
     "is_mobile": false,
     "previous_rssi": 70,
     "name": "Front Entrance",
     "uuid": "qwer1234wqer",
     "ibeacon_major": "12",
     "ibeacon_minor": "45",
     "protocol": "ibeacon",
     "protocol_frametype": "",
     "dwell_time": 600000,
     "start_time": "2014-08-22 14:48:02 +0000",
     "coordinates": [ 32.89545949009762,-117.19463284827117],
     "visibility": "Private",
     "battery_level": "50",
     "temperature": "68.32",
     "hardware": "HardwaretypeoftheBeacon",
     "categories": [
         {
             "Sports": {}
         },
         {
             "Womens": {
                 "subcategories": [
                     "golfshirts",
                     "dresses"
                 ]
             }
         },
         {
             "Mens": {}
         }
     ],
     "tags": [
         "womens",
         "golf",
         "shoes"
     ]
 }
```

<section id="geofence">&nbsp;</section>
### PROPERTY: GEOFENCE

A _geofence_ is a defined virtual perimeter around a geographical location. It can be a defined radius, as set with the `geofence_circle` field, or a zoned boundary, as set with the `geofence_polygon` field.


***
| Attribute        | Description           | Data Format  |
| --- |---| ---|
| identifier    | Unique geofence ID | String |
| name   | Name of the geofence | String |
| visibility | Who can see this beacon? (Private or Public) |    String |
| tags | Descriptive tags for the geofence | Array |
| geofence_circle| Use this if the geofence is a circle. <br> The array includes the `radius` of the circle in meters and the center `location` in lat-long coordinates |   Array |
| geofence_polygon|  Use this if the geofence is a polygon, defined by several `location` fields in lat-long coordinates |    Array |
| reporting_visibility | Whether to Hide/Show this property in the Reporting Dashboard | | Boolean |
<br>

```
 "geofence": {
     "identifier": "geofence2",
     "name": "SF Gelen Park",
     "visibility": "Public",

     "tags": [
         "womens",
         "golf",
         "shoes"
     ],
     "geofence_circle": {
         "radius": 100,
         "location": {
             "coordinates": [ 32.89545949009762,-117.19463284827117],
         }
     },
     "geofence_polygon": {
         "locations":
             {
                "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },
             {
                 "coordinates": [ 32.89545949009762,-117.19463284827117],
             },

     }

 }
```
<section id="user">&nbsp;</section>

### PROPERTY: USER
***
This is where the magic truly happens in our platform. The more user data you send us, the more insight we can deliver. 
With more data, we can begin to tie sessions together, building insight into user behavior extending out to the marketing cloud.

We accept a vast set of potential user identifiers that tie into the digital ecosystem. 
These identifiers could come from any number of sources, so the properties are as descriptive as possible.

The platform accepts a number of default properties or segments along with a user. By sending in these properties,
you can see the data sliced and diced by segment. Just send in the user information with any event.




| Attribute        | Description           | Data Format  |
| --- |---| ---|
| tags     | Descriptive tags for the user | Array |
| id   | Unique user ID      |   String |
| segments   | Audience characteristics of the user |    Array |
| age_range| Age range of the user | String |
| dob| Date of Birth of the user | String |
| ethnicity| Ethnicity of the user | String |
| childern_in_household| Number of children in the household of the user | String |
| gender| Gender of the user | String |
| income| Income range of the user | String |
| education| Education of the user | String |
| ISO3| Country code of the user | String |
| ISO2| Country code of the user | String |
| postcode| Postal code of the user | String |
| occupational_status| Occupational status of the user | String |
| home_owner| Is the user a home owner? | String |
| latino_hispanic| Is the user of hispanic heritage? | String |
| student_status| Is the user a student? | String |
| region| Region of the user | String |
| reporting_visibility | Whether to Hide/Show this property in the Reporting Dashboard | | Boolean |


#### age_range

| Name | Description
| --- | ---
| 13-17| 
| 18-24 | 
| 25-34 | 
| 35-44 | 
| 45-54 | 
| 55-64 | 
| 65+ | 
| unknown | 
| decline | user declined to answer


#### gender
| Name | Description
| --- | ---
| male |
| female |
| other |
| unknown | 
| decline | user declined to answer


#### children_in_household
| Name | Description
| --- | ---
| y | Has Kids
| n | No Kids
| unknown | 
| decline | user declined to answer


#### occupational_status
| Name | Description
| --- | ---
| employed | Employed
| unemployed | Unemployed
| part time | Employed Part Time
| unknown | 
| decline | user declined to answer


#### student_status
| Name | Description
| --- | ---
| Full Time Student | Enrolled full-time
| Part Time Student | Enrolled part-time
| Not a Student | Not enrolled in school
| unknown | 
| decline | user declined to answer
 


#### education

| Name | Description
| --- | ---
| less than high school | Less than high school
| high school completion | High school completion
| associate degree | Associate’s degree
| bachelor degree | Bachelor’s degree
| master degree | Master’s degree
| professional degree | Professional degree
| doctorate degree | Doctorate degree
| unknown | 
| decline | user declined to answer
 



#### ethnicity

| Name | Values
| --- | ---
|latino_hispanic | Y or N


| Name | Description
| --- | ---
|Black | Black or African American
|Caucasian | Caucasian or White
|Native American | American Indian and Alaska Native
|Asian | Asian
|Pacific Islander | Native Hawaiian and Other Pacific Islander
| unknown | 
| decline | user declined to answer



#### hhi - Household Income

| Name | Description
| --- | ---
| -25k | 
| 25-49k | 
| 50k-74k | 
| 75k-99k | 
| 100k-149k | 
| 150k + | 
| unknown | 
| decline | user declined to answer


#### home_owner

| Name | Values
| --- | ---
| home_owner | Y or N


#### marital_status
| Name | Description
| --- | ---
| married |
| single | 
| divorced | 
| widowed | 
| never married |
| unknown | 
| decline | user declined to answer


#### region - U.S.

| Name | Description
| --- | ---
| west| 
| south |
| midwest |
| northeast |
| unknown | 
| decline | user declined to answer
 



Example:

```
"user": {
    "id": {
        "mobile_device_bluetooth_identifier": "128 bit string",
        "mobile_device_ios_idfa": "092384",
        "mobile_device_ios_openidfa": "09238dd4",
        "mobile_device_ios_idfv": "092344",
        "mobile_device_ios_udid": "123",
        "datasnap_uuid": "datasnap_uuid",
        "web_domain_userid": "",
        "web_cookie": "foo",
        "domain_sessionid": "fqr9fgwer8vb9",
        "web_network_userid": "billybob",
        "web_user_fingerprint": "web_user_fingerprint",
        "web_analytics_company_z_cookie": "",
        "global_distinct_id": "userid1234",
        "global_user_ipaddress": "user_ipaddress",
        "mobile_device_fingerprint": "2da076c7ad28740c0b2a9b7fa6077c4f",
        "facebook_uid": "2234433",
        "mobile_device_google_advertising_id": "googid",
        "mobile_device_google_google_advertising_id_opt_in": "true",
        "unknown": "unknownid",
        "": ""
    },
    "age_range": "18-24",
    "dob": "1980-06-23 00:00:00",
    "ethnicity: "caucasian",
    "childern_in_household": "y",
    "gender": "male",
    "income": "15k-24k",
    "education": "No College",
    "ISO3": "GBR",
    "ISO2": "GB",
    "postcode": "94123",
    "occupational_status" : "employed",
    "home_owner": "y",
    "latino_hispanic: "y",
    "student_status" : "full time student",
    "region": "midwest",
    "abc_custom_user_type" : "vip"
    },
    "tags": [
        "womens",
        "golf",
        "shoes"
    ],
    "segments": [ 
        {
        "id": "1",
        "name": "donut eaters",
        "description": "donut eaters 18-24 male",
        "ext": ""
        },
        {
        "id": "2",
        "name": "donut eaters 2",
        "description": "donut eaters 18-24 female",
        "ext": ""
        }
    ]
}
```

<section id="communication">&nbsp;</section>
### PROPERTY: COMMUNICATION
***

You can send any type of _communication_ (in-app or push notification). Communication doesn't always need to indicate
that the content actually appeared on the user's device, just that a communication was sent.

For more targeted communication, use _campaign_.


| Attribute | Description | Example | Data Format  |
| --- |---| ---| ---|
| identifier     | Unique communication ID | |String |
| name   | Name of the communication   | Buy hotdogs at Half Time  |   String |
| advertiser_org_id   | The advertiser associated with the campaign. <br>**NOTE:** Will default to the top-level organization if not passed in   | | String |
| tags   | Descriptors for the communication   |   |    Array |
| description | High-level description of the communication (see `content` for lower-level) |  | String |
| content |  Content of the communication. This can be in plain text, formatted html, an image or a link | Get 10% off if you're wearing Giants hat! | String |
| communication\_vendor\_id| ID of the vendor who sent the notification |  |    String |
| status| Whether the communication was sent while the app was running with the possible values of "foreground" or "background". "background" can also mean the app was not running at all. | foreground, <br> background  | String |
| type| Communication type (in-app or push) | in-app, push | String |
| reporting_visibility | Whether ot Hide/Show this property in the Reporting Dashboard | | Boolean |

<br>


```
"communication": {
    "description": "mydescription",
    "advertiser_org_id":"adOrgID1",
    "tags": [
        "womens",
        "golf",
        "shoes"
    ],
    "identifier": "commid",
    "status": "foreground",
    "communication_vendor_id": "airpush",
    "name": "10% offPushnotification",
    "type": {
        "id": "typeid",
        "name": "PushNotificaion"
    },
    "content": {
        "text": "get10%off!",
        "description": "get10%offifyougotothe",
        "image": "http: //appl.com/image.gif",
        "html": "<p>Hithere!!get10%offnow!!</p>",
        "url": "http: //www.apple.com"
    }
}
```
<section id="campaign">&nbsp;</section>
### PROPERTY: CAMPAIGN
***

A _campaign_ represents all the properties needed to deliver some form of messaging to the user. It can include settings,
targeting criteria, communication IDs amongst other things. Unlike _communication_ events, campaigns are targeted and can be sent at specific times.

| Attribute        | Explanation           | Data Format  |
| --- |---| ---|
| identifier     | Unique campaign ID | String |
| name   | Campaign name     |   String |
| advertiser_org_id   | The advertiser assotiates with the campaign. Will default to the top-level organization if not passed in.     |   String |
| tags   | Descriptors for the campaign      |    Array |
| subcampaigns | Optional sub-campaigns under the parent campaign | Array |
| targeting_rules | Campaign rules |   String |
| time_filter| Time period(s) the campaign should run for |    String |
| time_trigger| Date/time the campaign should be triggered    |    String |
| communication | Communication ID associated with the campaign   |    String |
| reporting_visibility | Whether ot Hide/Show this property in the Reporting Dashboard | | Boolean |
<br>

```
"campaign": {
     "identifier": "campaignid",
     "name": "camapign10%offshoes",
     "advertiser_org_id":"adorgid1",
     "tags": [
         "womens",
         "golf",
         "shoes"
     ],
     "subcampaigns": [
         {
             "identifier": "campaignid",
             "name": "camapign11%offshoesmles"
         }
     ],
     "targeting_rules": {
         "id": "targetingid",
         "rules": [
             {
                 "id": "ruleid1",
                 "name": "retailandclothingruleforbackofstore",
                 "place_ids": [
                     "placeid1"
                 ],
                 "audience": {
                     "Education": [
                         "NoCollege",
                         "College",
                         "GradSchool"
                     ],
                     "Age": [
                         "18-24",
                         "25-34",
                         "35-44",
                         "45-55",
                         "55+"
                     ],
                     "Ethnicity": [
                         "Caucasian",
                         "AfricanAmerican",
                         "Asian",
                         "Hispanic",
                         "Other"
                     ],
                     "Kids": [
                         "NoKids",
                         "HasKids"
                     ],
                     "Gender": [
                         "Male",
                         "Female"
                     ],
                     "Interests": [
                         "Gettingfromheretothere",
                         "Biking",
                         "Automotive",
                         "Automotive.Cars"
                     ],
                     "Income": [
                         "$0-30k",
                         "$30-60k",
                         "$60-100k",
                         "100k+"
                     ]
                 },
                 "targeting_attributes": {
                     "store_type": "retail",
                     "product_type": "clothing"
                 }
             },
             {
                 "id": "ruleid2",
                 "name": "mycoolrule2",
                 "audience": {
                     "Education": [
                         "NoCollege",
                         "College",
                         "GradSchool"
                     ],
                     "Age": [
                         "18-24",
                         "25-34",
                         "35-44",
                         "45-55",
                         "55+"
                     ],
                     "Ethnicity": [
                         "Caucasian",
                         "AfricanAmerican",
                         "Asian",
                         "Hispanic",
                         "Other"
                     ],
                     "Kids": [
                         "NoKids",
                         "HasKids"
                     ],
                     "Gender": [
                         "Male",
                         "Female"
                     ],
                     "Interests": [
                         "Gettingfromheretothere",
                         "Biking",
                         "Automotive",
                         "Automotive.Cars"
                     ],
                     "Income": [
                         "$0-30k",
                         "$30-60k",
                         "$60-100k",
                         "100k+"
                     ]
                 }
             }
         ]
     },
     "time_filter": {
         "monday": {
             "start": "08: 00",
             "end": "13: 00"
         },
         "tuesday": {
             "start": "08: 00",
             "end": "22: 00"
         }
     },
     "time_trigger": {
         "monday": "08: 00",
         "tuesday": "13: 00"
     },
      "communication_ids": [
          "commid1", "commid2"
      ]
 }
```
<section id="datasnap">&nbsp;</section>
### PROPERTY: DATASNAP
***
The _datasnap_ property includes time-related properties, location properties, device properties and a transaction ID. Two time-related properties are included in your event automatically and are set at the time your event is recorded;
however, you can also override the created property if desired. For example, it my be useful to override properites if you are back-filling historical data.


| Attribute       | Description           | Data Format  |
| --- |---| ---|
| timestamp     | Provided by datasnap.io server. Format: year, month, day & time: 24 hour clock & UTC offset| String |
| created   | Provided by user. Format:  year, month, day & time: 24 hour clock & UTC offset| String |
| txn_id   | Transaction ID generated by the datasnap.io system | String |
| customer\_txn\_id   | Optional transaction ID generated by the customer | String |
| device   | Information about the device that is sending data | String |
<br>

```
"datasnap": {
        "timestamp": "2015-06-23T00:40:15.415Z",
        "created": "2015-06-23T00:40:15.415Z"
        "location": {
            "coordinates": [
                -88.21337,
                40.11041
            ]
        },
        "txn_id": "fgfgbrrwvb",
        "customer_txn_id": "fgfgbrrwvb"
        "device": {
            "user_agent": "Mozilla/5.0 (Linux; U; Android 4.0.3; ko-kr; LG-L160L Build/IML74K) AppleWebkit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30",
            "ip_address": "127.1.1.1",
            "platform": "ios",
            "os_version": "7.0",
            "model": "iPhone5",
            "manufacturer": "Apple",
            "name": "hashed device name",
            "vender_id": "63A7355F-5AF2-4E20-BE55-C3E80D0305B1",
            "carrier_name": "Verizon",
            "country_code": "1",
            "network_code": "327"
        }
    }
```

## Example Events [/events]


### Example 1: Beacon Sighting [POST]

+ Request (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                 "event_type":"beacon_sighting",
                 "beacon":{
                    "identifier":"XC45-223F"
                 },
                 "user":{
                    "id":{
                       "global_distinct_id":"1234-5566-1234"
                    }
                 },
                 "datasnap": {
                      "created": "2015-06-23T00:40:15.415Z"
                },
                "venue_org_id":"stadium1234",
                 "organization_ids":[
                    "45877hh233415htdg55t"
                 ],
                 "project_ids":[
                    "IOSApp123"
                 ],
                "venue_org_id":"venueclientid1"
                }
            ]


+ Response 200 (application/json)
        
        {"created": true}



### Example 2: Beacon Depart [POST]

+ Request (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                 "event_type":"beacon_depart",
                 "beacon":{
                    "identifier":"XC45-223F",
                    "dwell_time": 180
                 },
                 "user":{
                    "id":{
                       "global_distinct_id":"1234-5566-1234"
                    }
                 },
                 "datasnap": {
                      "created": "2015-06-23T00:40:15.415Z"
                },
                "venue_org_id":"stadium1234",
                 "organization_ids":[
                    "45877hh233415htdg55t"
                 ],
                 "project_ids":[
                    "IOSApp123"
                 ]
                }
            ]


+ Response 200 (application/json)
        
        {"created": true}



### Example 3: Geofence Depart [POST]
+ Request (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                     "event_type":"geofence_depart",
                     "geofence":{
                        "identifier":"ABCStoreGeofence"
                     },
                     "user":{
                        "id":{
                           "global_distinct_id":"1234-5566-1234"
                        }
                     },
                     "datasnap": {
                          "created": "2015-06-23T00:40:15.415Z"
                    },
                    "venue_org_id":"stadium1234",
                     "organization_ids":[
                        "45877hh233415htdg55t"
                     ],
                     "project_ids":[
                        "IOSApp123"
                     ],
                    "venue_org_id":"venueclientid1"
                }

            ]

+ Response 200 (application/json)
        
        {"created": true}
        


### Example 4: Campaign and Communication Event  [POST]


+ Request (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                    "event_type":"ds_communication_sent",
                    "campaign": {
                        "customer_advertiser_org_id": "543eb3440af5500176d37f34",
                        "identifier": "Campaign3",
                        "name": "Campaign 3 Name"
                    },
                    "communication": {
                         "customer_advertiser_org_id": "543eb3440af5500176d37f34",
                         "identifier": "Campaign3-Message1",
                         "name": "Campaign3-Message1 Name"
                     },
                     "user":{
                        "id":{
                           "global_distinct_id":"2"
                        }
                     },
                    "datasnap": {
                      "created": "2015-01-02T09:00:00"
                    },
                    "venue_org_id": "MegaStadium01",
                    "organization_ids": [
                      "123GFTsggTVF9899H"
                    ],
                    "project_ids":[
                        "AppID1"
                    ]
                }

            ]

+ Response 200 (application/json)
        
        {"created": true}


        
### Example 5: User GPS Event [POST]

+ Request (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                    "event_type":"global_position_sighting",
                     "global_position": {
                          "location": {
                            "coordinates": [
                             37.7833,
                             -122.4167
                            ]
                          },
                          "altitude": 13,
                          "accuracy": 10,
                          "course": 77.34375,
                          "speed": 4
                     },
                     "user":{
                        "id":{
                           "global_distinct_id":"1234-5566-1234"
                        }
                     },
                     "datasnap": {
                          "created": "2015-06-23T00:40:15.415Z"
                    },
                    "venue_org_id":"stadium1234",
                    "organization_ids":[
                        "45877hh233415htdg55t"
                     ],
                     "project_ids":[
                        "IOSApp123"
                     ],
                    "venue_org_id":"venueclientid1"
                }
            ]

+ Response 200 (application/json)
        
        {"created": true}
        



### Example 6: All Possible Fields [POST]

+ Request (application/json)

    + Headers

            Authorization: Basic E9NZuB6A91e2J03PKA2g7wx0629czel8

    + Body

            [
                {
                    "event_type": "beacon_depart",
                    "organization_ids": [
                        "3HRhnUtmtXnT1UHQHClAcP"
                    ],
                    "project_ids": [
                        "3HRhnUtmtXnT1UHQHClAcP"
                    ],
                    "venue_org_id":"venueclientid1",
                    "place": {
                        "id": "placeid",
                        "name": "Mission District",
                        "dwell_time": 600000,
                        "reporting_visibility": 1,
                        "tags": [
                            "womens",
                            "golf",
                            "shoes"
                        ],
                        "places":  [ 
                            {
                                "placeid": "placeid2"
                            },
                            {
                                "placeid": "placeid3"
                            }
                        ],
                        "address": {
                            "address1": "103 west street",
                            "address2": "",
                            "city": "San Francisco",
                            "region": "CA",
                            "zip": 94107,
                            "zip4": 3422
                        },
                        "last_place": "placeid-3",
                        "geofences": [
                            {
                                "geofenceid": "geofenceid2"
                            },
                            {
                                "geofenceid": "geofenceid2"
                            }
                        ],
                        "beacons": [
                            {
                                "beaconid": "beaconid1"
                            },
                            {
                                "beaconid": "beaconid2"
                            }
                        ]
                    },
                    "geofence": {
                        "identifier": "geofence2",
                        "name": "SF Gelen Park",
                        "visibility": "Public",
                        "dwell_time": 600000,
                        "start_time": "2014-12-14T20:24:01.123+00:00",
                        "last_update_time": "2014-12-14T20:24:01.123+00:00",
                        "reporting_visibility": 1,
                        "tags": [
                            "womens",
                            "golf",
                            "shoes"
                        ],
                        "geofence_circle": {
                            "radius": 100,
                            "coordinates": [
                                -88.21337,
                                40.11041
                            ]
                        },
                        "geofence_polygon": {
                            "locations": [
                                {
                                    "coordinates": [
                                        32.8953153522896,
                                        -117.19559844351653
                                    ]
                                },
                                {
                                    "coordinates": [
                                        32.8954009341414,
                                        -117.19516929007415
                                    ]
                                },
                                {
                                    "coordinates": [
                                        32.89564867061472,
                                        -117.1949815354431
                                    ]
                                },
                                {
                                    "coordinates": [
                                        32.89545949009762,
                                        -117.19463284827117
                                    ]
                                },
                                {
                                    "coordinates": [
                                        32.894986537037255,
                                        -117.19496544218902
                                    ]
                                },
                                {
                                    "coordinates": [
                                        32.894864920127866,
                                        -117.19554479933623
                                    ]
                                }
                            ]
                        }
                    },
                    "global_position":{
                        "location": {
                            "coordinates": [
                                -88.21337,
                                40.11041
                            ]
                        },
                        "altitude": 13.00,
                        "accuracy": 10,
                        "course": 77.34375,
                        "speed": 4.0
                    },
                    "beacon": {
                        "vendor_identifier": "SHDG-28AHD",
                        "vendor": "gimbal",
                        "identifier": "SHDG-28AHD",
                        "ble_uuid": "ble_uuid",
                        "ble_vendor_uuid": "ble_vendor_uuid",
                        "ble_vendor_id": "ble_vendor_id",
                        "rssi": 80,
                        "previous_rssi": 70,
                        "name": "Front Entrance",
                        "dwell_time": 600000,
                        "is_mobile": false,
                        "start_time": "2014-12-14T20:24:01.123000+00:00",
                        "coordinates": [
                            32.89545949009762,
                            -117.19463284827117
                        ],
                        "visibility": "Private",
                        "reporting_visibility": 1,
                        "battery_level": 50,
                        "temperature": 68.32,
                        "hardware": "HardwaretypeoftheBeacon",
                        "categories": [
                            {
                                "Sports": {}
                            },
                            {
                                "Womens": {
                                    "subcategories": [
                                        "golfshirts",
                                        "dresses"
                                    ]
                                }
                            },
                            {
                                "Mens": {}
                            }
                        ],
                        "tags": [
                            "womens",
                            "golf",
                            "shoes"
                        ]
                    },
                    "communication": {
                        "reporting_visibility": 1,
                        "description": "mydescription",
                        "tags": [
                            "womens",
                            "golf",
                            "shoes"
                        ],
                        "identifier": "commid",
                        "status": "active",
                        "vendor": "airpush",
                        "vendor_identifier": "1234",
                        "name": "10% offPushnotification",
                        "type": {
                            "id": "typeid",
                            "name": "PushNotificaion"
                        },
                        "content": {
                            "text": "get10%off!",
                            "description": "get10%offifyougotothe",
                            "image": "http: //appl.com/image.gif",
                            "html": "<p>Hithere!!get10%offnow!!</p>",
                            "url": "http: //www.apple.com"
                        }
                    },
                    "user": {
                        "reporting_visibility": 1,
                        "tags": [
                            "womens",
                            "golf",
                            "shoes"
                        ],
                        "id": {
                            "mobile_device_bluetooth_identifier": "8c4e1f232810d11be96edf47674f5641296a76f5",
                            "mobile_device_ios_idfa": "1a847de9f24b18eee3fac634b833b7887b32dea3",
                            "mobile_device_ios_openidfa": "09238dd4",
                            "mobile_device_ios_idfv": "092344",
                            "mobile_device_ios_udid": "123",
                            "datasnap_uuid": "datasnap_uuid",
                            "datasnap_app_user_id": "3474284734",
                            "web_domain_userid": "",
                            "web_cookie": "foo",
                            "domain_sessionid": "fqr9fgwer8vb9",
                            "web_network_userid": "billybob",
                            "web_user_fingerprint": "web_user_fingerprint",
                            "web_analytics_company_z_cookie": "",
                            "global_distinct_id": "userid1234",
                            "global_user_ipaddress": "user_ipaddress",
                            "mobile_device_fingerprint": "2da076c7ad28740c0b2a9b7fa6077c4f",
                            "facebook_uid": "2234433",
                            "mobile_device_google_advertising_id": "googid",
                            "mobile_device_google_google_advertising_id_opt_in": "true",
                            "unknown": "unknownid",
                            "": ""
                        },
                        "opt_in_location": true,
                        "opt_in_push_notifications": true,
                        "opt_in_vendor": true,
                        "audience": {
                            "Education": [
                                "College"
                            ],
                            "Age": [
                                "18-24"
                            ],
                            "Ethnicity": [
                                "Caucasian"
                            ],
                            "Kids": [
                                "NoKids"
                            ],
                            "Gender": [
                                "Male"
                            ],
                            "Interests": [
                                "Gettingfromheretothere",
                                "Biking",
                                "Automotive",
                                "Automotive.Cars"
                            ],
                            "Income": [
                                "$30-60k"
                            ]
                        },
                        "user_properties": {
                            "user_type": "VIP",
                            "user_spend": "high",
                            "engagement_time": "Greaterthan30minutes"
                        }
                    },
                    "campaign": {
                        "identifier": "campaignid",
                        "name": "camapign10%offshoes",
                        "vendor":"urbanairship",
                        "vendor_identifier": "1234",
                        "reporting_visibility": 1,
                        "tags": [
                            "womens",
                            "golf",
                            "shoes"
                        ],
                        "subcampaigns": [
                            {
                                "identifier": "campaignid",
                                "name": "camapign11%offshoesmles"
                            }
                        ],
                        "targeting_rules": {
                            "identifier": "targetingid",
                            "rules": [
                                {
                                    "identifier": "ruleid1",
                                    "name": "retailandclothingruleforbackofstore",
                                    "place_ids": [
                                        "placeid1"
                                    ],
                                    "audience": {
                                        "Education": [
                                            "NoCollege",
                                            "College",
                                            "GradSchool"
                                        ],
                                        "Age": [
                                            "18-24",
                                            "25-34",
                                            "35-44",
                                            "45-55",
                                            "55+"
                                        ],
                                        "Ethnicity": [
                                            "Caucasian",
                                            "AfricanAmerican",
                                            "Asian",
                                            "Hispanic",
                                            "Other"
                                        ],
                                        "Kids": [
                                            "NoKids",
                                            "HasKids"
                                        ],
                                        "Gender": [
                                            "Male",
                                            "Female"
                                        ],
                                        "Interests": [
                                            "Gettingfromheretothere",
                                            "Biking",
                                            "Automotive",
                                            "Automotive.Cars"
                                        ],
                                        "Income": [
                                            "$0-30k",
                                            "$30-60k",
                                            "$60-100k",
                                            "100k+"
                                        ]
                                    },
                                    "targeting_attributes": {
                                        "store_type": "retail",
                                        "product_type": "clothing"
                                    }
                                },
                                {
                                    "identifier": "ruleid2",
                                    "name": "mycoolrule2",
                                    "audience": {
                                        "Education": [
                                            "NoCollege",
                                            "College",
                                            "GradSchool"
                                        ],
                                        "Age": [
                                            "18-24",
                                            "25-34",
                                            "35-44",
                                            "45-55",
                                            "55+"
                                        ],
                                        "Ethnicity": [
                                            "Caucasian",
                                            "AfricanAmerican",
                                            "Asian",
                                            "Hispanic",
                                            "Other"
                                        ],
                                        "Kids": [
                                            "NoKids",
                                            "HasKids"
                                        ],
                                        "Gender": [
                                            "Male",
                                            "Female"
                                        ],
                                        "Interests": [
                                            "Gettingfromheretothere",
                                            "Biking",
                                            "Automotive",
                                            "Automotive.Cars"
                                        ],
                                        "Income": [
                                            "$0-30k",
                                            "$30-60k",
                                            "$60-100k",
                                            "100k+"
                                        ]
                                    }
                                }
                            ]
                        },
                        "time_filter": {
                            "monday": {
                                "start": "08: 00",
                                "end": "13: 00"
                            },
                            "tuesday": {
                                "start": "08: 00",
                                "end": "22: 00"
                            }
                        },
                        "time_trigger": {
                            "monday": "08: 00",
                            "tuesday": "13: 00"
                        },
                        "communication_ids": [
                            "commid1", "commid2"
                        ]
                    },
                    "datasnap": {
                    "timestamp": "2015-06-23T00:40:15.415Z",
                    "created": "2015-06-23T00:40:15.415Z",
                    "txn_id": "fgfgbrrwvb",
                    "customer_txn_id": "fgfgbrrwvb",
                    "device": {
                        "user_agent": "Mozilla/5.0 (Linux; U; Android 4.0.3; ko-kr; LG-L160L Build/IML74K) AppleWebkit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30",
                        "ip_address": "127.1.1.1",
                        "platform": "ios",
                        "os_version": "7.0",
                        "model": "iPhone5",
                        "manufacturer": "Apple",
                        "name": "hashed device name",
                        "vendor_id": "63A7355F-5AF2-4E20-BE55-C3E80D0305B1",
                        "carrier_name": "Verizon",
                        "country_code": "001",
                        "network_code": "327"
                    }
                    }
                },
                {
                    "event_type": "beacon_sighting"
                }
            ]

+ Response 200 (application/json)
        
        {"created": true}
